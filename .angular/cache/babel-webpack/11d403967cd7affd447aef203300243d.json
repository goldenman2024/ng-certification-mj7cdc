{"ast":null,"code":"import _classCallCheck from \"/home/goldenman2024/ng-certification-mj7cdc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/goldenman2024/ng-certification-mj7cdc/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from \"@angular/core\";\nexport var ZipCodeService = /*#__PURE__*/(function () {\n  var ZipCodeService = /*#__PURE__*/function () {\n    function ZipCodeService() {\n      _classCallCheck(this, ZipCodeService);\n\n      this.zipCodes = [];\n      this.initializeFromLocalStorage();\n    }\n\n    _createClass(ZipCodeService, [{\n      key: \"addZipCode\",\n      value: function addZipCode(zipCode) {\n        // Check if the zip code already exists in the array\n        if (this.indexOfZipCode(zipCode) === -1) {\n          this.zipCodes.push(zipCode);\n          this.saveZipCodesToLocalStorage();\n        } else {\n          // Alert the user that the zip code is already included\n          alert(\"The zip code is already included.\");\n        }\n      } // Function to check if the zip code already exists\n\n    }, {\n      key: \"indexOfZipCode\",\n      value: function indexOfZipCode(zipCode) {\n        return this.zipCodes.indexOf(zipCode);\n      } // Read operation\n\n    }, {\n      key: \"getZipCodes\",\n      value: function getZipCodes() {\n        return this.zipCodes.slice(); // Return a copy to prevent direct modification of the array\n      } // Delete operation\n\n    }, {\n      key: \"deleteZipCode\",\n      value: function deleteZipCode(zipCode) {\n        var index = this.zipCodes.indexOf(zipCode);\n\n        if (index !== -1) {\n          this.zipCodes.splice(index, 1);\n          this.saveZipCodesToLocalStorage();\n        }\n      } // Private method to save zip codes to local storage\n\n    }, {\n      key: \"saveZipCodesToLocalStorage\",\n      value: function saveZipCodesToLocalStorage() {\n        localStorage.setItem('zipCodes', JSON.stringify(this.zipCodes));\n      } // Initialize zip codes from local storage on service initialization\n\n    }, {\n      key: \"initializeFromLocalStorage\",\n      value: function initializeFromLocalStorage() {\n        var storedZipCodes = localStorage.getItem('zipCodes');\n\n        if (storedZipCodes) {\n          this.zipCodes = JSON.parse(storedZipCodes);\n        }\n      }\n    }]);\n\n    return ZipCodeService;\n  }();\n\n  ZipCodeService.ɵfac = function ZipCodeService_Factory(t) {\n    return new (t || ZipCodeService)();\n  };\n\n  ZipCodeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ZipCodeService,\n    factory: ZipCodeService.ɵfac,\n    providedIn: 'root'\n  });\n  return ZipCodeService;\n})();","map":null,"metadata":{},"sourceType":"module"}